{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61452\\\\Documents\\\\marriage-point-calculator\\\\src\\\\pages\\\\GamePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { IonContent, IonPage, IonButton, IonGrid, IonRow, IonCol } from '@ionic/react'; //util\n\nimport { useAuth } from '../auth/AuthProvider'; // action\n\nimport { getGameInfo, updatePlayerStats, addWinner, setPlayerIndividualPoint, setPointsToFirestore, setPlayerStats } from '../features/MarriageSlice'; // component\n\nimport PointComponent from '../components/PointComponent';\nimport HeaderComponent from '../components/HeaderComponent';\nimport StatComponent from '../components/StatComponent';\nimport LogoutButtonComponent from '../components/LogoutButtonComponent';\n\nconst GamePage = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const playerNames = useSelector(state => state.MarriageSlice.playerNames);\n  const numberOfPlayer = useSelector(state => state.MarriageSlice.numberOfPlayer);\n  const playerStats = useSelector(state => state.MarriageSlice.playerStats);\n  const winner = useSelector(state => state.MarriageSlice.winner);\n  const [gameID, setGameID] = useState(0);\n  const playerStatsCopied = cloneDeep(playerStats);\n  const {\n    getAuthToken\n  } = useAuth();\n  useEffect(() => {\n    const gameID = location.search.replace(/[?]/, \"\");\n    const body = {\n      gameID: gameID\n    };\n    dispatch(getGameInfo(body));\n    setGameID(gameID);\n  }, [dispatch, location.search]);\n  useEffect(() => {\n    playerNames.map(playerName => {\n      dispatch(setPlayerStats({\n        playerName,\n        seen: \"unseen\",\n        points: \"\"\n      }));\n    });\n  }, [playerNames]);\n\n  const calculatePoint = async () => {\n    let individualPointArr = [];\n    let seenCount = 0;\n    let dubleeCount = 0;\n    let unSeenCount = 0;\n    let dubleeWinner = false;\n    let token = \"\";\n    const arr = playerStats.map(playerStat => typeof playerStat.points === \"string\" ? 0 : playerStat.points);\n    const totalPoint = arr.reduce((acc, item) => acc + item);\n    playerStats.map(playerStat => {\n      if (playerStat.seen === \"seen\" && playerStat.playerName !== winner) {\n        seenCount += 1;\n      } else if (playerStat.seen === \"dublee\" && playerStat.playerName !== winner) {\n        dubleeCount += 1;\n      } else if (playerStat.seen === \"dublee\" && playerStat.playerName === winner) {\n        dubleeWinner = true;\n      } else if (playerStat.seen === \"unseen\") {\n        unSeenCount += 1;\n      }\n\n      return true;\n    });\n    token = await getAuthToken();\n    playerStats.map(playerStat => {\n      if (playerStat.seen === \"unseen\") {\n        individualPointArr.push((parseInt(totalPoint) + 10) * -1);\n      } else if (playerStat.seen === \"seen\" && playerStat.playerName === winner) {\n        individualPointArr.push(numberOfPlayer * playerStat.points - parseInt(totalPoint) + seenCount * 3 + unSeenCount * 10);\n      } else if (playerStat.seen === \"dublee\" && playerStat.playerName === winner) {\n        individualPointArr.push(numberOfPlayer * playerStat.points - parseInt(totalPoint) + seenCount * 5 + unSeenCount * 10);\n      } else if (playerStat.seen === \"seen\" && playerStat.playerName !== winner) {\n        if (dubleeWinner) {\n          individualPointArr.push(numberOfPlayer * playerStat.points - parseInt(totalPoint) - 5);\n        } else {\n          individualPointArr.push(numberOfPlayer * playerStat.points - parseInt(totalPoint) - 3);\n        }\n      } else if (playerStat.seen === \"dublee\" && playerStat.playerName !== winner) {\n        individualPointArr.push(numberOfPlayer * playerStat.points - parseInt(totalPoint));\n      }\n\n      return true;\n    });\n    const gamePointResponse = await dispatch(setPlayerIndividualPoint({\n      gameID: gameID,\n      gamePoints: JSON.stringify(individualPointArr),\n      token: token\n    }));\n    dispatch(setPointsToFirestore({\n      gameID: gameID,\n      gamePoints: gamePointResponse.data.gamePoints\n    })); // sets all stats to initial \n\n    playerStats.map((playerStat, index) => {\n      const body = { ...playerStatsCopied[parseInt(index)],\n        playerName: playerStat.playerName,\n        seen: \"unseen\",\n        points: \"\"\n      };\n      playerStatsCopied[parseInt(index)] = body;\n    });\n    dispatch(updatePlayerStats(playerStatsCopied));\n    dispatch(addWinner(\"\"));\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"265px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"seen\"), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"dubley\"))), playerNames.map((name, index) => /*#__PURE__*/React.createElement(PointComponent, {\n    playerName: name,\n    key: index,\n    num: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 52\n    }\n  })))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StatComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: () => calculatePoint(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Submit Points\"), /*#__PURE__*/React.createElement(LogoutButtonComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default GamePage;","map":{"version":3,"sources":["C:/Users/61452/Documents/marriage-point-calculator/src/pages/GamePage.js"],"names":["React","useState","useEffect","useLocation","useSelector","useDispatch","cloneDeep","IonContent","IonPage","IonButton","IonGrid","IonRow","IonCol","useAuth","getGameInfo","updatePlayerStats","addWinner","setPlayerIndividualPoint","setPointsToFirestore","setPlayerStats","PointComponent","HeaderComponent","StatComponent","LogoutButtonComponent","GamePage","location","dispatch","playerNames","state","MarriageSlice","numberOfPlayer","playerStats","winner","gameID","setGameID","playerStatsCopied","getAuthToken","search","replace","body","map","playerName","seen","points","calculatePoint","individualPointArr","seenCount","dubleeCount","unSeenCount","dubleeWinner","token","arr","playerStat","totalPoint","reduce","acc","item","push","parseInt","gamePointResponse","gamePoints","JSON","stringify","data","index","height","name"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport {IonContent, \r\n        IonPage, \r\n        IonButton,\r\n        IonGrid,\r\n        IonRow,\r\n        IonCol} from '@ionic/react';\r\n\r\n//util\r\nimport {useAuth} from '../auth/AuthProvider';\r\n\r\n// action\r\nimport {getGameInfo,\r\n        updatePlayerStats,\r\n        addWinner, \r\n        setPlayerIndividualPoint,\r\n        setPointsToFirestore,\r\n        setPlayerStats} from '../features/MarriageSlice';\r\n\r\n// component\r\nimport PointComponent from '../components/PointComponent';\r\nimport HeaderComponent from '../components/HeaderComponent';\r\nimport StatComponent from '../components/StatComponent';\r\nimport LogoutButtonComponent from '../components/LogoutButtonComponent';\r\n\r\nconst GamePage = () => {\r\n    const location = useLocation(); \r\n    const dispatch = useDispatch();\r\n    const playerNames = useSelector(state => state.MarriageSlice.playerNames);\r\n    const numberOfPlayer = useSelector(state => state.MarriageSlice.numberOfPlayer);\r\n    const playerStats = useSelector(state => state.MarriageSlice.playerStats);\r\n    const winner = useSelector(state => state.MarriageSlice.winner);\r\n    const [gameID,setGameID] = useState(0);\r\n    const playerStatsCopied = cloneDeep(playerStats);\r\n    const {getAuthToken} = useAuth();\r\n\r\n    useEffect(() =>{\r\n        const gameID = location.search.replace(/[?]/,\"\"); \r\n        const body = {\r\n            gameID:gameID\r\n        }\r\n        dispatch(getGameInfo(body))\r\n        setGameID(gameID)\r\n    }, [dispatch,location.search])\r\n\r\n    useEffect(()=>{ \r\n        playerNames.map((playerName)=>{\r\n            dispatch(setPlayerStats({\r\n                playerName,\r\n                seen:\"unseen\",\r\n                points:\"\"\r\n            }))\r\n        })    \r\n    },[playerNames])\r\n    \r\n    const calculatePoint=async ()=>{\r\n        let individualPointArr = [];\r\n        let seenCount = 0;\r\n        let dubleeCount = 0;\r\n        let unSeenCount = 0;\r\n        let dubleeWinner = false\r\n        let token = \"\";\r\n\r\n        const arr = playerStats.map(playerStat=>typeof(playerStat.points) === \"string\" ? 0: playerStat.points )\r\n        const totalPoint = arr.reduce((acc,item)=>acc+item);\r\n\r\n        playerStats.map(playerStat=>{\r\n            if(playerStat.seen===\"seen\" && playerStat.playerName !== winner){\r\n                seenCount+=1;\r\n            }else if(playerStat.seen===\"dublee\" && playerStat.playerName !== winner){\r\n                dubleeCount+=1;\r\n            }else if(playerStat.seen===\"dublee\" && playerStat.playerName === winner){\r\n                dubleeWinner=true;\r\n            }else if(playerStat.seen===\"unseen\"){\r\n                unSeenCount+=1\r\n            }   \r\n            return true;\r\n        })\r\n\r\n        token = await getAuthToken();\r\n\r\n        playerStats.map(playerStat=>{\r\n            if(playerStat.seen===\"unseen\"){\r\n                individualPointArr.push((parseInt(totalPoint)+10)*-1);\r\n            }else if(playerStat.seen===\"seen\" && playerStat.playerName === winner){\r\n                individualPointArr.push(numberOfPlayer*playerStat.points-parseInt(totalPoint)+seenCount*3+unSeenCount*10)\r\n            }else if(playerStat.seen===\"dublee\" && playerStat.playerName === winner){\r\n                individualPointArr.push(numberOfPlayer*playerStat.points-parseInt(totalPoint)+seenCount*5+unSeenCount*10)\r\n            }else if(playerStat.seen===\"seen\" && playerStat.playerName !== winner){\r\n                if(dubleeWinner){\r\n                    individualPointArr.push(numberOfPlayer*playerStat.points-parseInt(totalPoint)-5)\r\n                }else{\r\n                    individualPointArr.push(numberOfPlayer*playerStat.points-parseInt(totalPoint)-3)\r\n                }\r\n            }else if(playerStat.seen===\"dublee\" && playerStat.playerName !== winner){\r\n                individualPointArr.push(numberOfPlayer*playerStat.points-parseInt(totalPoint))\r\n            }\r\n            return true;\r\n        })\r\n        \r\n        const gamePointResponse = await dispatch(setPlayerIndividualPoint({gameID:gameID,gamePoints:JSON.stringify(individualPointArr),token:token}))\r\n\r\n        dispatch(setPointsToFirestore({gameID:gameID,gamePoints:gamePointResponse.data.gamePoints}))\r\n        \r\n        // sets all stats to initial \r\n        playerStats.map((playerStat,index)=>{\r\n            const body = {\r\n                ...playerStatsCopied[parseInt(index)],\r\n                playerName: playerStat.playerName,\r\n                seen:\"unseen\",\r\n                points:\"\"\r\n            }\r\n            playerStatsCopied[parseInt(index)] = body;\r\n        })\r\n        dispatch(updatePlayerStats(playerStatsCopied));\r\n        dispatch(addWinner(\"\"))\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <HeaderComponent/>\r\n            <div style={{height:\"265px\"}}>\r\n                <IonContent>\r\n                    <IonGrid>\r\n                        <IonRow>\r\n                            <IonCol size=\"2\">seen</IonCol>\r\n                            <IonCol size=\"2\">dubley</IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    {playerNames.map((name,index)=><PointComponent playerName = {name} key={index} num = {index}/>)}\r\n                </IonContent>\r\n            </div>\r\n            <IonContent>\r\n                <StatComponent/>\r\n            </IonContent>\r\n            <IonButton onClick={()=>calculatePoint()}>Submit Points</IonButton>\r\n            <LogoutButtonComponent/>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default GamePage\r\n"]},"metadata":{},"sourceType":"module"}