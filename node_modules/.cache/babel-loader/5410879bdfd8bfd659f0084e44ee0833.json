{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // libraries\n\nimport axios from 'axios'; // utils\n\nimport { db } from '../firebase.util';\nconst initialState = {\n  adminUid: \"\",\n  adminName: \"\",\n  numberOfPlayer: \"\",\n  playerNames: [],\n  playerStats: [],\n  gamePoints: [],\n  gameID: \"\",\n  winner: \"\",\n  error: \"\"\n}; // reducers\n\nexport const MarriageSlice = createSlice({\n  name: 'marriage',\n  initialState,\n  reducers: {\n    resetStateReducer: state => initialState,\n    setAdminUidReducer: (state, action) => {\n      state.adminUid = action.payload;\n    },\n    setAdminNameReducer: (state, action) => {\n      state.adminName = action.payload;\n    },\n    getNumOfPlayerReducer: (state, action) => {\n      state.numberOfPlayer = action.payload;\n    },\n    addPlayerNamesReducer: (state, action) => {\n      typeof action.payload === \"object\" ? state.playerNames = [...action.payload] : state.playerNames.push(action.payload);\n    },\n    getErrorDataReducer: (state, action) => {\n      state.error = action.payload;\n    },\n    addWinnerReducer: (state, action) => {\n      state.winner = action.payload;\n    },\n    setPlayerStatsReducer: (state, action) => {\n      state.playerStats.push(action.payload);\n    },\n    updatePlayerStatsReducer: (state, action) => {\n      state.playerStats = action.payload;\n    },\n    setPlayerIndividualPointReducer: (state, action) => {\n      state.playerIndividualPoints = action.payload;\n    },\n    setGamePointsReducer: (state, action) => {\n      state.gamePoints = [...action.payload];\n    },\n    setGameIDReducer: (state, action) => {\n      state.gameID = action.payload;\n    }\n  }\n}); // export the reducer\n\nexport default MarriageSlice.reducer; // actions\n\nconst {\n  getNumOfPlayerReducer,\n  addPlayerNamesReducer,\n  getErrorDataReducer,\n  addWinnerReducer,\n  setPlayerStatsReducer,\n  updatePlayerStatsReducer,\n  setGamePointsReducer,\n  setAdminUidReducer,\n  setAdminNameReducer,\n  resetStateReducer,\n  setGameIDReducer\n} = MarriageSlice.actions;\nexport const resetState = () => dispatch => {\n  try {\n    console.log('Entered set reset state');\n    dispatch(resetStateReducer());\n  } catch (error) {}\n};\nexport const setGameAdmin = adminInfo => dispatch => {\n  try {\n    console.log('Entered set game admin', adminInfo);\n    dispatch(setAdminUidReducer(adminInfo.adminUid));\n    dispatch(setAdminNameReducer(adminInfo.adminName));\n  } catch (error) {}\n};\nexport const getNumOfPlayerAction = numOfPlayer => dispatch => {\n  try {\n    console.log('Entered getNumOfPlayerAction ');\n    dispatch(getNumOfPlayerReducer(numOfPlayer));\n  } catch (error) {}\n};\nexport const addPlayerName = playerName => dispatch => {\n  try {\n    console.log('Entered addPlayerNames');\n    dispatch(addPlayerNamesReducer(playerName));\n  } catch (error) {}\n};\nexport const storeGameInfo = body => async dispatch => {\n  try {\n    console.log('Entered storeGameInfo = ', body);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/v1/storeGameInfo', body, config);\n    return res.data;\n  } catch (error) {}\n};\nexport const getGameInfo = body => async dispatch => {\n  try {\n    console.log('Entered get game info = ', body);\n    const res = await axios.get(`api/v1/storeGameInfo/${body.gameID}`);\n    const {\n      data\n    } = res.data;\n    dispatch(getNumOfPlayerReducer(data.numOfPlayers));\n    dispatch(addPlayerNamesReducer(data.playersName));\n    dispatch(setGameIDReducer(data.gameID));\n    dispatch(setGamePoint(data.gamePoints));\n    return res.data;\n  } catch (error) {}\n};\nexport const addWinner = winner => dispatch => {\n  try {\n    console.log(\"Entered add winner\");\n    dispatch(addWinnerReducer(winner));\n  } catch (error) {}\n};\nexport const setPlayerStats = body => dispatch => {\n  try {\n    console.log(\"Entered set player stat\");\n    dispatch(setPlayerStatsReducer(body));\n  } catch (error) {}\n};\nexport const updatePlayerStats = body => dispatch => {\n  try {\n    console.log(\"Entered set player state = \", body);\n    dispatch(updatePlayerStatsReducer(body));\n  } catch (error) {}\n};\nexport const setPlayerIndividualPoint = body => async dispatch => {\n  try {\n    console.log('Entered storeGameInfo = ', body);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json' // 'Authorization': `Bearer ${body.token}`\n\n      }\n    };\n    const res = await axios.post('/api/v1/updateGameInfo', body, config);\n    dispatch(setGamePointsReducer(res.data.data.gamePoints));\n    return res.data;\n  } catch (error) {}\n};\nexport const setPointsToFirestore = body => async => {\n  try {\n    console.log(\"Entered set points to Firestore = \", body);\n    db.collection(\"Marriage\").doc(`${body.gameID}`).set({\n      point: body.gamePoints\n    }).then(() => {\n      console.log('data successfully added');\n    }).catch(error => {\n      console.log(error);\n    });\n  } catch (error) {}\n};\nexport const setGamePoint = body => async dispatch => {\n  try {\n    console.log(\"Entered set Game Point\");\n    dispatch(setGamePointsReducer(body));\n    return true;\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/61452/Documents/marriage-point-calculator/src/features/MarriageSlice.js"],"names":["createSlice","axios","db","initialState","adminUid","adminName","numberOfPlayer","playerNames","playerStats","gamePoints","gameID","winner","error","MarriageSlice","name","reducers","resetStateReducer","state","setAdminUidReducer","action","payload","setAdminNameReducer","getNumOfPlayerReducer","addPlayerNamesReducer","push","getErrorDataReducer","addWinnerReducer","setPlayerStatsReducer","updatePlayerStatsReducer","setPlayerIndividualPointReducer","playerIndividualPoints","setGamePointsReducer","setGameIDReducer","reducer","actions","resetState","dispatch","console","log","setGameAdmin","adminInfo","getNumOfPlayerAction","numOfPlayer","addPlayerName","playerName","storeGameInfo","body","config","headers","res","post","data","getGameInfo","get","numOfPlayers","playersName","setGamePoint","addWinner","setPlayerStats","updatePlayerStats","setPlayerIndividualPoint","setPointsToFirestore","async","collection","doc","set","point","then","catch"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\n\r\n// utils\r\nimport {db} from '../firebase.util';\r\n\r\nconst initialState ={\r\n    adminUid:\"\",\r\n    adminName:\"\",\r\n    numberOfPlayer:\"\",\r\n    playerNames:[],\r\n    playerStats:[],\r\n    gamePoints:[],\r\n    gameID:\"\",\r\n    winner:\"\",\r\n    error:\"\"\r\n}\r\n// reducers\r\nexport const MarriageSlice = createSlice({\r\n    name:'marriage',\r\n    initialState,\r\n    reducers:{\r\n        resetStateReducer:state=>initialState,\r\n        setAdminUidReducer:(state,action)=>{\r\n            state.adminUid = action.payload\r\n        },\r\n        setAdminNameReducer:(state,action)=>{\r\n            state.adminName = action.payload\r\n        },\r\n        getNumOfPlayerReducer:(state,action)=>{\r\n            state.numberOfPlayer=action.payload\r\n        },\r\n        addPlayerNamesReducer:(state,action)=>{\r\n            typeof action.payload=== \"object\" ? state.playerNames = [...action.payload]: state.playerNames.push(action.payload);\r\n        },\r\n        getErrorDataReducer:(state,action)=>{\r\n            state.error = action.payload\r\n        },\r\n        addWinnerReducer:(state,action)=>{\r\n            state.winner=action.payload\r\n        },\r\n        setPlayerStatsReducer:(state,action)=>{\r\n            state.playerStats.push(action.payload)\r\n        },\r\n        updatePlayerStatsReducer:(state,action)=>{\r\n            state.playerStats = action.payload\r\n        },\r\n        setPlayerIndividualPointReducer:(state,action)=>{\r\n            state.playerIndividualPoints=action.payload\r\n        },\r\n        setGamePointsReducer:(state,action)=>{\r\n            state.gamePoints = [...action.payload]\r\n        },\r\n        setGameIDReducer:(state,action)=>{\r\n            state.gameID=action.payload\r\n        }\r\n    }\r\n})\r\n\r\n// export the reducer\r\nexport default MarriageSlice.reducer;\r\n\r\n// actions\r\nconst { getNumOfPlayerReducer,\r\n        addPlayerNamesReducer,\r\n        getErrorDataReducer,\r\n        addWinnerReducer,\r\n        setPlayerStatsReducer,\r\n        updatePlayerStatsReducer,\r\n        setGamePointsReducer,\r\n        setAdminUidReducer,\r\n        setAdminNameReducer,\r\n        resetStateReducer,\r\n        setGameIDReducer\r\n        } = MarriageSlice.actions;\r\n\r\nexport const resetState = () => dispatch=>{\r\n    try {\r\n        console.log('Entered set reset state');\r\n\r\n        dispatch(resetStateReducer());\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const setGameAdmin = (adminInfo) => dispatch=>{\r\n    try {\r\n        console.log('Entered set game admin',adminInfo);\r\n\r\n        dispatch(setAdminUidReducer(adminInfo.adminUid));\r\n        dispatch(setAdminNameReducer(adminInfo.adminName));\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const getNumOfPlayerAction = (numOfPlayer)=>dispatch=>{\r\n    try {\r\n        console.log('Entered getNumOfPlayerAction ')\r\n        dispatch(getNumOfPlayerReducer(numOfPlayer))\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const addPlayerName = (playerName) =>dispatch=>{\r\n    try {\r\n        console.log('Entered addPlayerNames');\r\n        dispatch(addPlayerNamesReducer(playerName))\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const storeGameInfo = (body)=>async dispatch=>{\r\n    try {\r\n        console.log('Entered storeGameInfo = ', body)\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/v1/storeGameInfo',body,config)\r\n\r\n        return res.data\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const getGameInfo = (body) => async dispatch=>{\r\n    try {\r\n        console.log('Entered get game info = ', body)\r\n\r\n        const res = await axios.get(`api/v1/storeGameInfo/${body.gameID}`);\r\n\r\n        const {data} = res.data;\r\n\r\n        dispatch(getNumOfPlayerReducer(data.numOfPlayers));\r\n        dispatch(addPlayerNamesReducer(data.playersName));\r\n        dispatch(setGameIDReducer(data.gameID));\r\n        dispatch(setGamePoint(data.gamePoints));\r\n\r\n        return res.data;\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const addWinner = (winner)=>dispatch=>{\r\n    try {\r\n        console.log(\"Entered add winner\");\r\n\r\n        dispatch(addWinnerReducer(winner));\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const setPlayerStats = (body)=>dispatch=>{\r\n    try {\r\n        console.log(\"Entered set player stat\");\r\n\r\n        dispatch(setPlayerStatsReducer(body));\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const updatePlayerStats = (body)=>dispatch=>{\r\n    try {\r\n        console.log(\"Entered set player state = \", body);\r\n\r\n        dispatch(updatePlayerStatsReducer(body));\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const setPlayerIndividualPoint = (body)=>async dispatch=>{\r\n    try {\r\n        console.log('Entered storeGameInfo = ', body);\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                // 'Authorization': `Bearer ${body.token}`\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/v1/updateGameInfo',body,config);\r\n\r\n        dispatch(setGamePointsReducer(res.data.data.gamePoints));\r\n\r\n        return res.data;\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const setPointsToFirestore = (body) =>async=>{\r\n    try {\r\n        console.log(\"Entered set points to Firestore = \",body);\r\n        \r\n        db.collection(\"Marriage\")\r\n                        .doc(`${body.gameID}`)\r\n                        .set({\r\n                            point:body.gamePoints\r\n                        }).then(()=>{\r\n            console.log('data successfully added');\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        });\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const setGamePoint = (body)=>async dispatch=>{\r\n    try {\r\n        console.log(\"Entered set Game Point\");\r\n\r\n        dispatch(setGamePointsReducer(body));\r\n\r\n        return true;\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}