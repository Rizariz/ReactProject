{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61452\\\\Documents\\\\marriage-point-calculator\\\\src\\\\components\\\\StatComponent.js\";\nimport { IonCol, IonGrid, IonRow } from '@ionic/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst StatComponent = () => {\n  const playerNames = useSelector(state => state.MarriageSlice.playerNames);\n  const gamePoints = useSelector(state => state.MarriageSlice.gamePoints);\n  const numberOfPlayer = useSelector(state => state.MarriageSlice.numberOfPlayer);\n\n  const pointAdditionFunc = () => {\n    let totalPointsArr = new Array(numberOfPlayer).fill(0);\n    const testArr = gamePoints.map(gamePoint => JSON.parse(gamePoint));\n    testArr.map(points => points.map((point, index) => {\n      return totalPointsArr[index] = point + totalPointsArr[index];\n    }));\n    return totalPointsArr;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, playerNames.map((playerName, index) => /*#__PURE__*/React.createElement(IonCol, {\n    key: index,\n    className: \"ion-align-self-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, playerName))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflow: \"scroll\",\n      height: \"19rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, gamePoints.map((gamePoint, index) => /*#__PURE__*/React.createElement(IonRow, {\n    key: index,\n    className: \"ion-align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, JSON.parse(gamePoint).map((point, index) => /*#__PURE__*/React.createElement(IonCol, {\n    key: index,\n    className: \"ion-align-self-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }\n  }, point))))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, pointAdditionFunc().map((point, index) => /*#__PURE__*/React.createElement(IonCol, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 61\n    }\n  }, point)))));\n};\n\nexport default StatComponent;","map":{"version":3,"sources":["C:/Users/61452/Documents/marriage-point-calculator/src/components/StatComponent.js"],"names":["IonCol","IonGrid","IonRow","React","useSelector","StatComponent","playerNames","state","MarriageSlice","gamePoints","numberOfPlayer","pointAdditionFunc","totalPointsArr","Array","fill","testArr","map","gamePoint","JSON","parse","points","point","index","playerName","overflow","height","backgroundColor"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,cAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,WAAW,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBF,WAA9B,CAA/B;AACA,QAAMG,UAAU,GAAGL,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBC,UAA9B,CAA9B;AACA,QAAMC,cAAc,GAAGN,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBE,cAA9B,CAAlC;;AAEA,QAAMC,iBAAiB,GAAC,MAAI;AACxB,QAAIC,cAAc,GAAG,IAAIC,KAAJ,CAAUH,cAAV,EAA0BI,IAA1B,CAA+B,CAA/B,CAArB;AACA,UAAMC,OAAO,GAAGN,UAAU,CAACO,GAAX,CAAeC,SAAS,IAAEC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,IAAEA,MAAM,CAACJ,GAAP,CAAW,CAACK,KAAD,EAAOC,KAAP,KAAe;AAAC,aAAOV,cAAc,CAACU,KAAD,CAAd,GAAsBD,KAAK,GAACT,cAAc,CAACU,KAAD,CAAjD;AAAyD,KAApF,CAApB;AACA,WAAOV,cAAP;AACH,GALD;;AAOA,sBACI,uDACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,CAACU,GAAZ,CACG,CAACO,UAAD,EAAYD,KAAZ,kBACI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,SAAS,EAAC,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,UADL,CAFP,CADL,CADJ,eAUI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,QAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQhB,UAAU,CAACO,GAAX,CAAe,CAACC,SAAD,EAAWK,KAAX,kBACX,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAIA,KAAf;AAAsB,IAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,CAACC,KAAL,CAAWF,SAAX,EAAsBD,GAAtB,CAA0B,CAACK,KAAD,EAAOC,KAAP,kBACvB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,SAAS,EAAC,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KADL,CADH,CADL,CADJ,CAFR,CAVJ,eAuBI;AAAI,IAAA,KAAK,EAAE;AAACK,MAAAA,eAAe,EAAE;AAAlB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,eAwBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,iBAAiB,GAAGK,GAApB,CAAwB,CAACK,KAAD,EAAOC,KAAP,kBAAe,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,KAArB,CAAvC,CADL,CAxBJ,CADJ,CADJ;AAgCH,CA5CD;;AA8CA,eAAehB,aAAf","sourcesContent":["import { IonCol, IonGrid, IonRow } from '@ionic/react';\r\nimport React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst StatComponent = () => {\r\n    const playerNames = useSelector(state => state.MarriageSlice.playerNames);\r\n    const gamePoints = useSelector(state => state.MarriageSlice.gamePoints);\r\n    const numberOfPlayer = useSelector(state => state.MarriageSlice.numberOfPlayer);\r\n\r\n    const pointAdditionFunc=()=>{\r\n        let totalPointsArr = new Array(numberOfPlayer).fill(0);\r\n        const testArr = gamePoints.map(gamePoint=>JSON.parse(gamePoint))\r\n        testArr.map(points=>points.map((point,index)=>{return totalPointsArr[index]=point+totalPointsArr[index]}))\r\n        return totalPointsArr\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IonGrid>\r\n                <IonRow className=\"ion-align-items-start\">\r\n                    {playerNames.map(\r\n                        (playerName,index)=>\r\n                            <IonCol key={index} className=\"ion-align-self-start\">\r\n                                {playerName}\r\n                            </IonCol>)\r\n                    }\r\n                </IonRow>\r\n\r\n                <div style={{overflow:\"scroll\",height: \"19rem\"}}>\r\n                    {\r\n                        gamePoints.map((gamePoint,index)=>\r\n                            <IonRow key = {index} className=\"ion-align-items-start\">\r\n                                {JSON.parse(gamePoint).map((point,index)=>\r\n                                    <IonCol key={index} className=\"ion-align-self-start\">\r\n                                        {point}\r\n                                    </IonCol>\r\n                                )}\r\n                            </IonRow>\r\n                        )\r\n                    }\r\n                </div>\r\n                <hr style={{backgroundColor: \"black\"}}/>\r\n                <IonRow>\r\n                    {pointAdditionFunc().map((point,index)=><IonCol key={index}>{point}</IonCol>)}\r\n                </IonRow>\r\n            </IonGrid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatComponent\r\n"]},"metadata":{},"sourceType":"module"}